version: 2
references:
  persist_debug_workspace: &persist_debug_workspace
    persist_to_workspace:
      root: ~/code
      paths:
        - app/build/intermediates
        - app/build/outputs/androidTest-results
        - app/build/outputs/apk
        - app/build/outputs/code-coverage
        - app/build/test-results

  persist_firebase_workspace: &persist_firebase_workspace
    persist_to_workspace:
      root: ~/code
      paths:
        - firebase

jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-25-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
         name: Chmod permissions
         command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Build debug APK and test APK
          command: |
              ./gradlew :app:assembleDebug
              ./gradlew :app:assembleDebugAndroidTest
      - *persist_debug_workspace
      - store_artifacts:
              path: app/build/outputs/apk/
              destination: /apk/


  test:
      working_directory: ~/code
      docker:
        - image: circleci/android:api-25-alpha  # gcloud is baked into this image
      environment:
        JVM_OPTS: -Xmx3200m
      steps:
        - checkout
        - attach_workspace:
               at: ~/code
        #  - run:
        #          name: Chmod permissions
        #         command: sudo chmod +x ./gradlew
        #- run:
        #   name: Build debug APK and release APK
        #   command: |
        #          ./gradlew :app:assembleDebug
        #          ./gradlew :app:assembleDebugAndroidTest
        - run:
            name: Store Google Service Account
            command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
        - run:
            name: Authorize gcloud and set config defaults
            command: |
              sudo gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
              sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
       # - run:
       #     name: Test with Firebase Test Lab
       #     command: sudo gcloud firebase test android run --type instrumentation --app /home/circleci/code/app/build/outputs/apk/debug/app-debug.apk --test /home/circleci/code/app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk --device model=sailfish,version=25,locale=en_US,orientation=portrait --environment-variables coverage=true,coverageFile=/sdcard/tmp/code-coverage/connected/coverage.ec --directories-to-pull=/sdcard/tmp --timeout 5m
        - run:
            name: Create directory to store test results
            command: mkdir /home/circleci/code/firebase
        - run:
            name: Download instrumented test results from Firebase Test Lab
            command: sudo gsutil -m cp -r -U "`gsutil ls gs://test-lab-vm19s8xyqd4p2-n5n51hhbjmqti | tail -1`*" /root/workspace/firebase/
            #command: sudo gsutil -m cp -r -U "sudo gsutil ls gs://test-lab-vm19s8xyqd4p2-n5n51hhbjmqti | tail -n1" /home/circleci/code/firebase/
            #command: sudo gsutil ls gs://test-lab-vm19s8xyqd4p2-n5n51hhbjmqti | tail -n1
            #command: sudo gsutil -D version -l
        - *persist_firebase_workspace
        - store_artifacts:
            path: firebase/
            destination: /firebase/
  coverage:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-25-alpha  # gcloud is baked into this image
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
          #- *restore_cache
      - run:
        name: Chmod permissions
        command: sudo chmod +x ./gradlew
      - run:
        name: Download dependencies
        command: ./gradlew androidDependencies
      - attach_workspace:
        at: ~/code
      - run:
        name: Move Firebase coverage report
        command: mkdir -p app/build/outputs/code-coverage/connected && cp firebase/sailfish-25-en_US-portrait/artifacts/coverage.ec app/build/outputs/code-coverage/connected/coverage.ec
      - run:
        name: Store Google Service Account
        command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run:
        name: Generate JaCoCo report
        command: ./gradlew -PciBuild=true :app:jacocoTestReport
      - run:
        name: Upload coverage report to Codacy
        command: ./gradlew -PciBuild=true uploadCoverageToCodacy
      - run:
        name: Upload coverage report to CodeCov
        command: bash <(curl -s https://codecov.io/bash)
      - store_artifacts:
        path: app/build/reports/
        destination: /reports/

workflows:
  version: 2
  workflow:
    jobs:
      - build
      - test:
          requires:
            - build
      - coverage:
          requires:
            - test
